# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: Build

on:  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  push:
    branches-ignore:  # build all branches except:
    - 'dependabot/**'  # prevent GHA triggered twice (once for commit to the branch and once for opening/syncing the PR)
    tags-ignore:  # don't build tags
    - '**'
    paths-ignore:
    - '**/*.adoc'
    - '**/*.md'
    - '.act*'
    - '.editorconfig'
    - '.git*'
    - '.github/*.yml'
  pull_request:
    paths-ignore:
    - '**/*.adoc'
    - '**/*.md'
    - '.act*'
    - '.editorconfig'
    - '.git*'
    - '.github/*.yml'
  workflow_dispatch:
    # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch


defaults:
  run:
    shell: bash


jobs:
  ###########################################################
  build:
  ###########################################################
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:  # https://github.com/actions/runner-images#available-images
        - ubuntu-latest
        - windows-latest
        - macos-latest
      fail-fast: false

    steps:
    - name: Git Checkout
      uses: actions/checkout@v4  # https://github.com/actions/checkout


    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'


    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-


    - name: Download dependencies
      run: go mod download


    - name: Build
      run: go build -v ./cmd/codecontext


    - name: Test
      env:
        # Set UTF-8 encoding to fix Unicode issues
        LANG: C.UTF-8
        LC_ALL: C.UTF-8
      run: go test -v ./...


    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: codecontext-${{ matrix.os }}
        path: |
          codecontext
          codecontext.exe
        if-no-files-found: error


  ###########################################################
  release-latest:
  ###########################################################
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts


    - name: Prepare release assets
      run: |
        mkdir -p release
        # Rename artifacts to proper names
        mv artifacts/codecontext-ubuntu-latest/codecontext release/codecontext-linux-amd64
        mv artifacts/codecontext-windows-latest/codecontext.exe release/codecontext-windows-amd64.exe
        mv artifacts/codecontext-macos-latest/codecontext release/codecontext-darwin-amd64
        # Make Linux and macOS binaries executable
        chmod +x release/codecontext-linux-amd64
        chmod +x release/codecontext-darwin-amd64
        # Generate checksums
        cd release && sha256sum * > checksums.txt


    - name: Delete existing latest release
      uses: dev-drprasad/delete-tag-and-release@v1.1
      with:
        tag_name: latest
        github_token: ${{ secrets.GITHUB_TOKEN }}
        delete_release: true
      continue-on-error: true


    - name: Create latest release
      uses: ncipollo/release-action@v1
      with:
        tag: latest
        name: Latest Development Build
        body: |
          Latest development build from main branch.

          **⚠️ This is an automated development build and may be unstable.**

          Last updated: ${{ github.event.head_commit.timestamp }}
          Commit: ${{ github.sha }}
        artifacts: "release/*"
        artifactContentType: application/octet-stream
        makeLatest: false
        prerelease: true
        allowUpdates: true
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
